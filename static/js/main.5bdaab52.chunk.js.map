{"version":3,"sources":["pages/AboutMe/AboutMe.js","pages/Project/Project.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["AboutMe","className","src","class","alt","Project","id","type","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","href","target","Main","name","App","style","backgroundColor","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5bdaab52.chunk.js","sourcesContent":["import React from 'react';\r\nconst AboutMe = () => {\r\n  return (\r\n    <>\r\n      <header>About me</header>\r\n      <ul className='list-unstyled'>\r\n        <li className='media'>\r\n        <img\r\n          src=\"https://user-images.githubusercontent.com/58324084/85816215-80250380-b71f-11ea-8c75-ef4e9141db43.jpg\"\r\n          class=\"img-fluid rounded-circle\"\r\n          alt=\"profilePicture\"\r\n        />\r\n          <div className='media-body'>\r\n            <h5 className='mt-0 mb-3'>Hi everyone!</h5>\r\n            Nice to meet you all. I graduated from high school in Korea and\r\n            studied abroad in the United States. I was a little bored to\r\n            introduce myself in English, so I tried a new way in Korean. Last\r\n            year, I graduated from UCSB as a chemical major. However, since\r\n            then, I've been trying to learn coding to provide the solutions\r\n            needed for business and the current society. I've always liked\r\n            computer and mathematics relative to other subjects, and my\r\n            problem-solving and organizing habits were good reasons for learning\r\n            coding fun and easy.\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default AboutMe;\r\n","import React from 'react';\r\nconst Project = () => {\r\n  return (\r\n    <>\r\n      <header>Projects</header>\r\n      <div class='accordion' id='projectAccordian'>\r\n        <div class='card'>\r\n          <div class='card-header' id='project1'>\r\n            <h2 class='mb-0'>\r\n              <button\r\n                class='btn btn-link'\r\n                type='button'\r\n                data-toggle='collapse'\r\n                data-target='#collapseOne'\r\n                aria-expanded='true'\r\n                aria-controls='collapseOne'\r\n              >\r\n                Project # 1 (Ōkido's Pokémon Research Institute)\r\n                <i class='material-icons' id='expandbtn'>\r\n                  expand_more\r\n                </i>\r\n              </button>\r\n            </h2>\r\n          </div>\r\n          <div\r\n            id='collapseOne'\r\n            class='collapse show'\r\n            aria-labelledby='project1'\r\n            data-parent='#projectAccordian'\r\n          >\r\n            <div class='card-body'>\r\n              <ul class='list-unstyled'>\r\n                <li class='media'>\r\n                  <img\r\n                    src='https://user-images.githubusercontent.com/58324084/85816114-3cca9500-b71f-11ea-8f77-15d1480d0e88.png'\r\n                    class='align-self-center'\r\n                    alt='...'\r\n                  />\r\n                  <div class='media-body'>\r\n                    <h5 class='mt-0 mb-1'>\r\n                      Ōkido's Pokémon Research Institute\r\n                    </h5>\r\n                    Mobile-first UI application, which shows Pokémon user\r\n                    searched and shows which Pokémon week against and strong\r\n                    against.\r\n                    <h6>\r\n                      <li class='font-weight-lighter'>\r\n                        - Built with Materialize\r\n                      </li>\r\n                      <li class='font-weight-lighter'>\r\n                        - Used two server-side APIs including one third-party\r\n                        API\r\n                      </li>\r\n                    </h6>\r\n                    <a\r\n                      href='https://alanhlee.github.io/PokemonIndex/'\r\n                      target='_blank'\r\n                      class='badge badge-info'\r\n                    >\r\n                      Play Demo\r\n                    </a>\r\n                    <a\r\n                      href='https://github.com/alanhlee/PokemonIndex'\r\n                      target='_blank'\r\n                      class='badge badge-dark'\r\n                    >\r\n                      View Source\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='card'>\r\n          <div class='card-header' id='project2'>\r\n            <h2 class='mb-0'>\r\n              <button\r\n                class='btn btn-link'\r\n                type='button'\r\n                data-toggle='collapse'\r\n                data-target='#collapseTwo'\r\n                aria-expanded='true'\r\n                aria-controls='collapseTwo'\r\n              >\r\n                Project # 2 (NotFaceBook)\r\n                <i class='material-icons' id='expandbtn'>\r\n                  expand_more\r\n                </i>\r\n              </button>\r\n            </h2>\r\n          </div>\r\n          <div\r\n            id='collapseTwo'\r\n            class='collapse show'\r\n            aria-labelledby='project2'\r\n            data-parent='#projectAccordian'\r\n          >\r\n            <div class='card-body'>\r\n              <ul class='list-unstyled'>\r\n                <li class='media'>\r\n                  <img\r\n                    src='https://user-images.githubusercontent.com/58324084/85816147-55d34600-b71f-11ea-9d05-3bfc0f566f04.PNG'\r\n                    class='align-self-center'\r\n                    alt='...'\r\n                  />\r\n                  <div class='media-body'>\r\n                    <h5 class='mt-0 mb-1'>Not FaceBook</h5>\r\n                    Mobile and Website UI Full-Stack application, which allows\r\n                    users to have unique id and password. Users can make friends\r\n                    with other users, post images and whatever text they want\r\n                    to, and access to a chatroom too!\r\n                    <h6>\r\n                      <li class='font-weight-lighter'>\r\n                        - Did not use any styling library.\r\n                      </li>\r\n                      <li class='font-weight-lighter'>\r\n                        - HTML, CSS, JS, Sequelize, MySQL, Express, moment,\r\n                        Node.js, Heroku (w/ JAWSDB) were utilized.\r\n                      </li>\r\n                    </h6>\r\n                    <a\r\n                      href='https://n0tfacebook.herokuapp.com'\r\n                      target='_blank'\r\n                      class='badge badge-info'\r\n                    >\r\n                      Visit website\r\n                    </a>\r\n                    <a\r\n                      href='https://github.com/pravinsisowath/notFacebook'\r\n                      target='_blank'\r\n                      class='badge badge-dark'\r\n                    >\r\n                      View Source\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Project;\r\n","import React from 'react';\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <div class='main-container'>\r\n        <div>\r\n          <a\r\n            href='mailto:kim.hoyeon93@gmail.com'\r\n            target='_blank'\r\n            name='email'\r\n            class='main-item'\r\n          >\r\n            Send an email to hoyeon<i class='material-icons'>email</i>\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a\r\n            href='https://www.linkedin.com/in/hoyeon-kim-930813kr/'\r\n            target='_blank'\r\n            class='main-item'\r\n          >\r\n            Go to Hoyeon's linkedin<i class='material-icons'>face</i>\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a\r\n            href='https://github.com/hoyeoness9837?tab=repositories'\r\n            target='_blank'\r\n            class='main-item'\r\n          >\r\n            Go to Hoyeon's github<i class='material-icons'>usb</i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react';\nimport { Switch, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport AboutMe from './pages/AboutMe';\nimport Project from './pages/Project';\nimport Main from './pages/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav\n          className='navbar navbar-expand-lg navbar-dark'\n          style={{ backgroundColor: 'red' }}\n        >\n          <Link to='/'>Main</Link>\n          <Link to='/aboutme'>About Me</Link>\n          <Link to='/projects'>Projects</Link>\n        </nav>\n        <Switch>\n          <Route exact path='/'>\n            <Main />\n          </Route>\n          <Route path='/aboutme'>\n            <AboutMe />\n          </Route>\n          <Route path='/projects'>\n            <Project />\n          </Route>\n          <Route path='/'>Not Found</Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}